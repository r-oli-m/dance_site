{"ast":null,"code":"var _jsxFileName = \"/Users/reva/Desktop/projects/web102/web_final/client/src/components/CommentSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = _ref => {\n  _s();\n\n  let {\n    postId\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    const fetchComments = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('comments').select('*').eq('post_id', postId).order('created_at', {\n        ascending: true\n      });\n\n      if (error) {\n        console.error('Error fetching comments:', error.message);\n        return;\n      }\n\n      setComments(data);\n    };\n\n    fetchComments();\n  }, [postId]);\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // Check if newComment is not empty\n\n    if (newComment.trim() === '') return;\n\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('comments').insert({\n        post_id: postId,\n        content: newComment\n      });\n\n      if (error) {\n        console.error('Error adding comment:', error.message);\n        return;\n      } // Update comments state with the newly added comment\n\n\n      setComments([...comments, data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted by: \", comment.user_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted at: \", comment.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentSection, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","supabase","CommentSection","postId","comments","setComments","newComment","setNewComment","fetchComments","data","error","from","select","eq","order","ascending","console","message","handleSubmit","event","preventDefault","trim","insert","post_id","content","map","comment","user_id","created_at","id","e","target","value"],"sources":["/Users/reva/Desktop/projects/web102/web_final/client/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../client';\n\nconst CommentSection = ({ postId }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      const { data, error } = await supabase\n        .from('comments')\n        .select('*')\n        .eq('post_id', postId)\n        .order('created_at', { ascending: true });\n\n      if (error) {\n        console.error('Error fetching comments:', error.message);\n        return;\n      }\n\n      setComments(data);\n    };\n\n    fetchComments();\n  }, [postId]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Check if newComment is not empty\n    if (newComment.trim() === '') return;\n\n    try {\n      const { data, error } = await supabase\n        .from('comments')\n        .insert({ post_id: postId, content: newComment });\n\n      if (error) {\n        console.error('Error adding comment:', error.message);\n        return;\n      }\n\n      // Update comments state with the newly added comment\n      setComments([...comments, data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Comments</h2>\n      <ul>\n        {comments.map(comment => (\n          <li key={comment.id}>\n            <p>{comment.content}</p>\n            <p>Posted by: {comment.user_id}</p>\n            <p>Posted at: {comment.created_at}</p>\n          </li>\n        ))}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          placeholder=\"Add a comment...\"\n          required\n        />\n        <button type=\"submit\">Post Comment</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}